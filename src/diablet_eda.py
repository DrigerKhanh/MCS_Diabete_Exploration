import pandas as pd
import numpy as np
import matplotlib.pyplot as plt
import seaborn as sns

# ƒê·ªçc d·ªØ li·ªáu
df = pd.read_csv("../dataset/diabetes_binary_5050split_health_indicators_BRFSS2015.csv")

# 1Ô∏è‚É£ T·ªïng quan d·ªØ li·ªáu
print("=== T·ªïng quan d·ªØ li·ªáu ===")
print(df.shape)
print(df.info())
print(df.head())

# 2Ô∏è‚É£ Ph√¢n b·ªë nh√£n b·ªánh
print("\n=== Ph√¢n b·ªë nh√£n b·ªánh (0 = kh√¥ng ti·ªÉu ƒë∆∞·ªùng, 1 = ti·ªÉu ƒë∆∞·ªùng) ===")
print(df['Diabetes_binary'].value_counts(normalize=True))

# 3Ô∏è‚É£ Th·ªëng k√™ m√¥ t·∫£ c√°c bi·∫øn s·ªë
print("\n=== M√¥ t·∫£ th·ªëng k√™ ===")
print(df.describe())

# ========================= EDA ============================
# 4Ô∏è‚É£ So s√°nh trung b√¨nh m·ªôt s·ªë y·∫øu t·ªë gi·ªØa 2 nh√≥m
factors = ['BMI', 'Age', 'HighBP', 'HighChol', 'Smoker', 'PhysActivity']
mean_comparison = df.groupby('Diabetes_binary')[factors].mean()
print("\n=== Trung b√¨nh c√°c y·∫øu t·ªë theo nh√≥m b·ªánh ===")
print(mean_comparison)

# 5Ô∏è‚É£ T∆∞∆°ng quan
corr = df.corr(numeric_only=True)
corr_target = corr['Diabetes_binary'].sort_values(ascending=False)

# Hi·ªÉn th·ªã top 15 bi·∫øn t∆∞∆°ng quan m·∫°nh nh·∫•t
print("üîç t∆∞∆°ng quan cuÃâa caÃÅc ƒëƒÉÃ£c tr∆∞ng v·ªõi Diabetes_binary:")
print(corr_target.head(corr_target.size))

print("C√°c c·ªôt numeric ƒë∆∞·ª£c d√πng trong ma tr·∫≠n t∆∞∆°ng quan:")
print(corr.columns.tolist())
print(f"T·ªïng c·ªông: {len(corr.columns)} c·ªôt")

# V·∫Ω bi·ªÉu ƒë·ªì tr·ª±c quan
plt.figure(figsize=(10,6))
sns.barplot(x=corr_target.head(15), y=corr_target.head(15).index, palette="coolwarm")
plt.title('T∆∞∆°ng quan gi·ªØa c√°c bi·∫øn v√† t√¨nh tr·∫°ng ti·ªÉu ƒë∆∞·ªùng')
plt.xlabel('H·ªá s·ªë t∆∞∆°ng quan (Pearson)')
plt.ylabel('Bi·∫øn s·ª©c kh·ªèe')
plt.show()

print("\n=== T∆∞∆°ng quan gi·ªØa c√°c bi·∫øn v√† b·ªánh ti·ªÉu ƒë∆∞·ªùng ===")
print(corr_target.head(15))

# V·∫Ω heatmap t∆∞∆°ng quan
plt.figure(figsize=(10, 8))
sns.heatmap(corr, cmap='coolwarm', center=0)
plt.title("Heatmap t∆∞∆°ng quan gi·ªØa c√°c bi·∫øn s·ª©c kh·ªèe")
plt.show()

# 6Ô∏è‚É£ M·ªôt s·ªë bi·ªÉu ƒë·ªì tr·ª±c quan
plt.figure(figsize=(8, 5))
sns.boxplot(x='Diabetes_binary', y='BMI', data=df)
plt.title("Ph√¢n b·ªë BMI theo t√¨nh tr·∫°ng ti·ªÉu ƒë∆∞·ªùng")
plt.show()

# Th√™m ph√¢n b·ªë c·ªßa c√°c bi·∫øn s·ªë quan tr·ªçng
important_vars = ['BMI', 'Age', 'GenHlth', 'PhysHlth']

fig, axes = plt.subplots(2, 2, figsize=(12, 10))
for i, var in enumerate(important_vars):
    df[var].hist(ax=axes[i//2, i%2], bins=20, alpha=0.7)
    axes[i//2, i%2].set_title(f'Ph√¢n b·ªë {var}')
plt.tight_layout()
plt.show()

plt.figure(figsize=(6, 4))
sns.barplot(x='HighBP', y='Diabetes_binary', data=df)
plt.title("T·ª∑ l·ªá m·∫Øc b·ªánh theo huy·∫øt √°p cao")
plt.show()

plt.figure(figsize=(6, 4))
sns.barplot(x='HighChol', y='Diabetes_binary', data=df)
plt.title("T·ª∑ l·ªá m·∫Øc b·ªánh theo cholesterol cao")
plt.show()

plt.figure(figsize=(6, 4))
sns.barplot(x='PhysActivity', y='Diabetes_binary', data=df)
plt.title("T·ª∑ l·ªá m·∫Øc b·ªánh theo ho·∫°t ƒë·ªông th·ªÉ ch·∫•t")
plt.show()

# T·∫≠p trung v√†o top 10 bi·∫øn quan tr·ªçng nh·∫•t
top_10_features = corr_target.head(11).index[1:]  # B·ªè ch√≠nh Diabetes_binary

plt.figure(figsize=(10, 8))
sns.heatmap(df[top_10_features].corr(), annot=True, cmap='coolwarm', center=0)
plt.title('T∆∞∆°ng quan gi·ªØa c√°c y·∫øu t·ªë nguy c∆° ch√≠nh')
plt.show()

# T·ª∑ l·ªá ti·ªÉu ƒë∆∞·ªùng theo nh√≥m tu·ªïi
plt.figure(figsize=(12, 6))
df.groupby('Age')['Diabetes_binary'].mean().plot(kind='bar')
plt.title('T·ª∑ l·ªá ti·ªÉu ƒë∆∞·ªùng theo nh√≥m tu·ªïi')
plt.ylabel('T·ª∑ l·ªá ti·ªÉu ƒë∆∞·ªùng')
plt.show()

# Theo gi·ªõi t√≠nh (n·∫øu c√≥ bi·∫øn Sex)
if 'Sex' in df.columns:
    pd.crosstab(df['Sex'], df['Diabetes_binary'], normalize='index').plot(kind='bar')
    plt.title('T·ª∑ l·ªá ti·ªÉu ƒë∆∞·ªùng theo gi·ªõi t√≠nh')
    plt.show()

# 7Ô∏è‚É£ Nh·∫≠n x√©t s∆° b·ªô
print("\n=== Nh·∫≠n x√©t s∆° b·ªô t·ª´ EDA ===")
print("- Nh√≥m b·ªã ti·ªÉu ƒë∆∞·ªùng c√≥ BMI v√† tu·ªïi trung b√¨nh cao h∆°n r√µ r·ªát.")
print("- Huy·∫øt √°p cao (HighBP) v√† cholesterol cao (HighChol) l√† hai y·∫øu t·ªë t∆∞∆°ng quan m·∫°nh nh·∫•t.")
print("- Ho·∫°t ƒë·ªông th·ªÉ ch·∫•t gi√∫p gi·∫£m nguy c∆° m·∫Øc b·ªánh.")
print("- H√∫t thu·ªëc v√† v·∫≠n ƒë·ªông th·ªÉ ch·∫•t c≈©ng c√≥ ·∫£nh h∆∞·ªüng nh·∫π.")

